{"version":3,"sources":["context.js","Component/Contact/Contact.js","Component/Contact/Contacts.js","Component/layout/TextInput.js","Component/Contact/AddContact.js","Component/Contact/EditContact.js","Component/layout/Header.js","Component/pages/About.js","Component/pages/NotFound.js","Component/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showDetails","showOnClick","e","onClickDelete","a","delete","name","email","phone","className","icon","faSortDown","style","cursor","onClick","faTimes","float","color","bind","to","propsTypes","PropsTypes","object","isRequired","Contacts","Fragment","key","TextInput","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","mySubmit","preventDefault","newContact","uuid","post","onAllChange","target","onSubmit","EditContact","upContact","match","params","put","history","push","Header","logo","fontSize","href","About","NotFound","Test","title","body","fetch","then","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0846ca4c.chunk.js","sourcesContent":["import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nconst Context = React.createContext()\r\nconst reducer = (state,action)=>{\r\n                switch(action.type){\r\n                   case 'DELECT_CONTACT':\r\n                        return{\r\n                            ...state,\r\n                            contacts: state.contacts.filter(contact=> contact.id !== action.payload)\r\n                        }\r\n                    case 'ADD_CONTACT':\r\n                        return{\r\n                            ...state,\r\n                            contacts: [action.payload, ...state.contacts]\r\n                        }\r\n                        case 'UPDATE_CONTACT':\r\n                            return{\r\n                                ...state,\r\n                                contacts: state.contacts.map(\r\n                                    contact=>\r\n                                    contact.id=== action.payload.id\r\n                                    ?(contact=action.payload)\r\n                                    :contact\r\n                                )\r\n                            }\r\n                    default:\r\n                        return state\r\n                }\r\n            }\r\n\r\nexport  class Provider extends Component{\r\n    state={\r\n        contacts: [],\r\n       dispatch: action=> this.setState(state=>reducer(state,action))\r\n    }\r\n    async componentDidMount(){\r\n        const res = await axios\r\n        .get\r\n        ('https://jsonplaceholder.typicode.com/users')\r\n\r\n        this.setState({\r\n            contacts:res.data\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer","import React, { Component } from \"react\";\r\nimport PropsTypes from \"prop-types\";\r\nimport {Consumer} from '../../context'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSortDown,faTimes  } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nclass Contact extends Component {\r\n  state={\r\n    showDetails: false\r\n  }\r\n   showOnClick=(e)=>{\r\n    this.setState({\r\n      showDetails: !this.state.showDetails\r\n    })\r\n    \r\n  }\r\n  onClickDelete=async(id,dispatch)=>{\r\n    try{\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      dispatch({type: 'DELECT_CONTACT',payload: id})\r\n    }catch(e){\r\n      dispatch({type: 'DELECT_CONTACT',payload: id})\r\n  }\r\n}\r\n  render() {\r\n    const {id,name,email,phone } = this.props.contact;\r\n    const {showDetails} = this.state\r\n    return (\r\n      <Consumer>\r\n        {\r\n          value=>{\r\n            const {dispatch} = value\r\n            return(\r\n              <div className=\"card mt-3\">\r\n              <div className=\"card-body\">\r\n                 <h3>{name}{' '}<FontAwesomeIcon icon={faSortDown} style={{cursor:'pointer'}} onClick={this.showOnClick}/>\r\n                  <FontAwesomeIcon icon={faTimes} \r\n                  style={{cursor:'pointer',float: 'right',color:'red'}} \r\n                  onClick={this.onClickDelete.bind(this,id,dispatch)}/> \r\n                  <Link to={`contact/edit/${id}`}>Edit</Link>\r\n                   </h3>\r\n                  {\r\n                    showDetails ? ( \r\n                      <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                    </ul>)\r\n                    : null\r\n                  }\r\n              </div>\r\n            </div>\r\n            )\r\n          }\r\n        }\r\n      </Consumer>\r\n\r\n    );\r\n  }\r\n}\r\nContact.propsTypes = {\r\n  contact: PropsTypes.object.isRequired,\r\n \r\n};\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport {Consumer} from '../../context'\r\nexport default class Contacts extends Component {\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value=>{\r\n                    // const {contacts}= value\r\n                    return(\r\n                        <React.Fragment>\r\n                        {\r\n                            value.contacts.map(contact=>(\r\n                             <Contact key={contact.id}\r\n                             contact={contact}\r\n                             />\r\n                            ))\r\n                        } \r\n                        </React.Fragment> \r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInput=({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    onChange,\r\n    type,\r\n    error\r\n    \r\n})=>{\r\n    return(\r\n        <div className=\"form-group\">\r\n                <label htmlFor=\"\">{label}</label>\r\n                          <input type={type}\r\n                                        name={name}\r\n                                       \r\n                                         className={classnames('form-control from-control-lg',{\r\n                                             'is-invalid': error\r\n                                         })}\r\n                                         placeholder={placeholder}\r\n                                         value={value}\r\n                                         onChange={onChange}\r\n                                         />\r\n                                         {error&&<div className=\"invalid-feedback\">{error}</div>}\r\n                                    </div>        \r\n    )\r\n}\r\nTextInput.propTypes={\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\nTextInput.defaultProps={\r\n    type: 'text'\r\n}\r\nexport default TextInput","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport uuid from 'uuid'\r\nimport TextInput from '../layout/TextInput'\r\nimport axios from 'axios'\r\nimport { async } from 'q'\r\n\r\nexport default class AddContact extends Component {\r\n    state={\r\n        name: '',\r\n        email: '',\r\n        phone:'',\r\n        errors:{}\r\n    }\r\n    mySubmit=async(dispatch,e)=>{\r\n        e.preventDefault()\r\n        const {name,email,phone} = this.state\r\n        if(name===''){\r\n            this.setState({errors:{name: 'Name is required'}})\r\n            return\r\n        }\r\n        if(email===''){\r\n            this.setState({errors:{email: 'email is required'}})\r\n            return\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors:{phone: 'phone is required'}})\r\n            return\r\n        }\r\n        const newContact ={\r\n            id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const res =await axios.post\r\n        ('https://jsonplaceholder.typicode.com/users',newContact)\r\n        dispatch({type: 'ADD_CONTACT',payload: res.data})\r\n\r\n\r\n        // dispatch({type: 'ADD_CONTACT',payload: newContact})\r\n\r\n        this.setState({\r\n            name: '',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        })\r\n        \r\n    }\r\n    onAllChange=e=>{\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    render() {\r\n        const {name,email,phone,errors}= this.state\r\n\r\n            return(\r\n                <Consumer>\r\n                    {value=>{\r\n                        const {dispatch} = value\r\n                        return(\r\n                            <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.mySubmit.bind(this,dispatch)}>\r\n                                    <TextInput\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter your name\"\r\n                                        value={name}\r\n                                        onChange={this.onAllChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInput\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter your Email\"\r\n                                        value={email}\r\n                                        onChange={this.onAllChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                   <TextInput\r\n                                        label=\"phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter your phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onAllChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" \r\n                                    className=\"btn btn-block btn-light\"\r\n                                    value=\"Add Contact\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                    }}\r\n                </Consumer>\r\n            )\r\n\r\n       \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport uuid from 'uuid'\r\nimport TextInput from '../layout/TextInput'\r\nimport axios from 'axios'\r\nimport { async } from 'q'\r\n\r\nexport default class EditContact extends Component {\r\n    state={\r\n        name: '',\r\n        email: '',\r\n        phone:'',\r\n        errors:{}\r\n    }\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params\r\n        const res = await axios.get(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`)\r\n            const contact = res.data\r\n            this.setState({\r\n                name:contact.name,\r\n                email: contact.email,\r\n                phone: contact.phone\r\n            })\r\n    }\r\n    mySubmit=async(dispatch,e)=>{\r\n        e.preventDefault()\r\n        const {name,email,phone} = this.state\r\n        if(name===''){\r\n            this.setState({errors:{name: 'Name is required'}})\r\n            return\r\n        }\r\n        if(email===''){\r\n            this.setState({errors:{email: 'email is required'}})\r\n            return\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors:{phone: 'phone is required'}})\r\n            return\r\n        }\r\n        const upContact ={\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const {id} = this.props.match.params\r\n        const res =await axios.put\r\n        (`https://jsonplaceholder.typicode.com/users/${id}`,upContact)\r\n        dispatch({type: 'UPDATE_CONTACT',payload: res.data})\r\n\r\n\r\n        // dispatch({type: 'ADD_CONTACT',payload: newContact})\r\n\r\n        this.setState({\r\n            name: '',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n        this.props.history.push('/')\r\n    }\r\n    onAllChange=e=>{\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    render() {\r\n        const {name,email,phone,errors}= this.state\r\n\r\n            return(\r\n                <Consumer>\r\n                    {value=>{\r\n                        const {dispatch} = value\r\n                        return(\r\n                            <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.mySubmit.bind(this,dispatch)}>\r\n                                    <TextInput\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter your name\"\r\n                                        value={name}\r\n                                        onChange={this.onAllChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInput\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter your Email\"\r\n                                        value={email}\r\n                                        onChange={this.onAllChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                   <TextInput\r\n                                        label=\"phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter your phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onAllChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" \r\n                                    className=\"btn btn-block btn-light\"\r\n                                    value=\"Update Contact\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                    }}\r\n                </Consumer>\r\n            )\r\n\r\n       \r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n      const {logo} = props\r\n  return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3\">\r\n            <div className=\"container\">\r\n                  <a style={{color: \"#fff\",fontSize:\"40px\"}} href=\"#\">{logo}</a>\r\n                  <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/\" className=\"nav-link\">Home </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <Link to=\"/add/contact\" className=\"nav-link\">Add Contact </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <Link to=\"/about/:4\" className=\"nav-link\">About </Link>\r\n                   \r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/about\" className=\"nav-link\">About </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/test\" className=\"nav-link\">Test </Link>\r\n                    </li>\r\n                  </ul>\r\n            </div>\r\n</nav>\r\n  )\r\n     \r\n\r\n                      \r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div className=\"display-4\">\r\n                <h1>{props.match.params.id}</h1>\r\n            <h2>About my Check</h2>\r\n            <p>Version 10.0242.3</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1>Not Foun Page</h1>\r\n            <p>Sorry this page is not found</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n    state ={\r\n        title: '',\r\n        body: ''\r\n    }\r\n    componentDidMount(){\r\n       fetch\r\n       ('https://jsonplaceholder.typicode.com/posts/1')\r\n       .then(response=> response.json())\r\n       .then(data=> this.setState({\r\n           title: data.title,\r\n           body: data.body\r\n       }))\r\n    }\r\n    // componentWillMount(){\r\n    //     console.log('componet will mount');\r\n        \r\n    // }\r\n    // componentWillUpdate(){\r\n    //     console.log('componentWillUpdate');\r\n        \r\n    // }\r\n    // componentWillReceiveProps(nextProps,nextState){\r\n    //     console.log('componentWillReceiveProps');\r\n        \r\n    // }\r\n    // static getDerivedStateFromProps(nextProps,PrevState){\r\n    //     return{\r\n    //         test: 'something'\r\n    //     }\r\n    // }\r\n    // static getSnapshotBeforeUpdate(prevProps,PrevState){\r\n    //     console.log('getSnapshotBeforeUpdate');\r\n        \r\n    // }\r\n    render() {\r\n        const {title,body} = this.state\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Contacts from './Component/Contact/Contacts'\nimport AddContact from './Component/Contact/AddContact'\nimport EditContact from './Component/Contact/EditContact'\nimport Header from './Component/layout/Header'\nimport About from './Component/pages/About'\nimport NotFound from './Component/pages/NotFound'\nimport Test from './Component/test/Test'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Provider} from './context'\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom'\n\n class App extends Component {\n  render() {\n   \n    return (\n     <Provider>\n       <Router >\n       <Header  logo=\"ThemePixel\"  />\n        <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/add/contact\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about/:id\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route exact  component={NotFound} />\n            </Switch>\n            {/* <AddContact  />\n            <Contacts  /> */}\n        </div>\n       </Router>  \n     </Provider>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}